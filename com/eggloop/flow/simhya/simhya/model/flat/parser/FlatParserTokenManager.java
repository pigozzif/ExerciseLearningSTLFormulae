/* Generated By:JavaCC: Do not edit this line. FlatParserTokenManager.java */
package com.eggloop.flow.simhya.simhya.model.flat.parser;

/**
 * Token Manager.
 */
public class FlatParserTokenManager implements FlatParserConstants {

    /**
     * Debug output.
     */
    public java.io.PrintStream debugStream = System.out;

    /**
     * Set debug output.
     */
    public void setDebugStream(java.io.PrintStream ds) {
        debugStream = ds;
    }

    private final int jjStopStringLiteralDfa_2(int pos, long active0) {
        switch (pos) {
            default:
                return -1;
        }
    }

    private final int jjStartNfa_2(int pos, long active0) {
        return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
    }

    private int jjStopAtPos(int pos, int kind) {
        jjmatchedKind = kind;
        jjmatchedPos = pos;
        return pos + 1;
    }

    private int jjMoveStringLiteralDfa0_2() {
        switch (curChar) {
            case 40:
                return jjStopAtPos(0, 41);
            case 41:
                return jjStopAtPos(0, 42);
            case 44:
                return jjStopAtPos(0, 43);
            default:
                return jjMoveNfa_2(0, 0);
        }
    }

    static final long[] jjbitVec0 = {
            0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
    };

    private int jjMoveNfa_2(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 38;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x3ff000000000000L & l) != 0L) {
                                if (kind > 36)
                                    kind = 36;
                                jjCheckNAddStates(0, 6);
                            } else if (curChar == 47)
                                jjAddStates(7, 8);
                            else if (curChar == 46)
                                jjCheckNAddTwoStates(5, 14);
                            else if (curChar == 45)
                                jjCheckNAddStates(9, 14);
                            break;
                        case 1:
                            if ((0x3ff400000000000L & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjstateSet[jjnewStateCnt++] = 1;
                            break;
                        case 2:
                            if (curChar == 45)
                                jjCheckNAddStates(9, 14);
                            break;
                        case 3:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(3);
                            break;
                        case 4:
                            if (curChar == 46)
                                jjCheckNAdd(5);
                            break;
                        case 5:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(5);
                            break;
                        case 6:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(6, 7);
                            break;
                        case 7:
                            if (curChar != 46)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(8);
                            break;
                        case 8:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(8);
                            break;
                        case 9:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(12);
                            break;
                        case 12:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(12);
                            break;
                        case 13:
                            if (curChar == 46)
                                jjCheckNAdd(14);
                            break;
                        case 14:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(14, 15);
                            break;
                        case 16:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(17);
                            break;
                        case 17:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(17);
                            break;
                        case 18:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(18, 19);
                            break;
                        case 19:
                            if (curChar == 46)
                                jjCheckNAddTwoStates(20, 21);
                            break;
                        case 20:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(20, 21);
                            break;
                        case 22:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(23);
                            break;
                        case 23:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(23);
                            break;
                        case 24:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAddStates(0, 6);
                            break;
                        case 25:
                            if (curChar == 46)
                                jjCheckNAddTwoStates(5, 14);
                            break;
                        case 26:
                            if (curChar == 47)
                                jjAddStates(7, 8);
                            break;
                        case 27:
                            if (curChar == 47)
                                jjCheckNAddStates(15, 17);
                            break;
                        case 28:
                            if ((0xffffffffffffdbffL & l) != 0L)
                                jjCheckNAddStates(15, 17);
                            break;
                        case 29:
                            if ((0x2400L & l) != 0L && kind > 5)
                                kind = 5;
                            break;
                        case 30:
                            if (curChar == 10 && kind > 5)
                                kind = 5;
                            break;
                        case 31:
                            if (curChar == 13)
                                jjstateSet[jjnewStateCnt++] = 30;
                            break;
                        case 32:
                            if (curChar == 42)
                                jjCheckNAddTwoStates(33, 34);
                            break;
                        case 33:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(33, 34);
                            break;
                        case 34:
                            if (curChar == 42)
                                jjAddStates(18, 19);
                            break;
                        case 35:
                            if ((0xffff7fffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(36, 34);
                            break;
                        case 36:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(36, 34);
                            break;
                        case 37:
                            if (curChar == 47 && kind > 6)
                                kind = 6;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x7fffffe07fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 1:
                            if ((0x7fffffe87fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 10:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(20, 21);
                            break;
                        case 15:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(22, 23);
                            break;
                        case 21:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(24, 25);
                            break;
                        case 28:
                            jjAddStates(15, 17);
                            break;
                        case 33:
                            jjCheckNAddTwoStates(33, 34);
                            break;
                        case 35:
                        case 36:
                            jjCheckNAddTwoStates(36, 34);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 28:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjAddStates(15, 17);
                            break;
                        case 33:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(33, 34);
                            break;
                        case 35:
                        case 36:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(36, 34);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 38 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private final int jjStopStringLiteralDfa_1(int pos, long active0) {
        switch (pos) {
            case 0:
                if ((active0 & 0x10000000000L) != 0L)
                    return 6;
                if ((active0 & 0x200000L) != 0L) {
                    jjmatchedKind = 37;
                    return 1;
                }
                if ((active0 & 0x6L) != 0L)
                    return 43;
                return -1;
            case 1:
                if ((active0 & 0x200000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 1;
                    return 1;
                }
                return -1;
            case 2:
                if ((active0 & 0x200000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 2;
                    return 1;
                }
                return -1;
            default:
                return -1;
        }
    }

    private final int jjStartNfa_1(int pos, long active0) {
        return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
    }

    private int jjMoveStringLiteralDfa0_1() {
        switch (curChar) {
            case 9:
                return jjStartNfaWithStates_1(0, 2, 43);
            case 32:
                return jjStartNfaWithStates_1(0, 1, 43);
            case 43:
                return jjMoveStringLiteralDfa1_1(0x8000000000L);
            case 45:
                return jjMoveStringLiteralDfa1_1(0x10000000000L);
            case 61:
                return jjStopAtPos(0, 38);
            case 115:
                return jjMoveStringLiteralDfa1_1(0x200000L);
            default:
                return jjMoveNfa_1(0, 0);
        }
    }

    private int jjMoveStringLiteralDfa1_1(long active0) {
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_1(0, active0);
            return 1;
        }
        switch (curChar) {
            case 61:
                if ((active0 & 0x8000000000L) != 0L)
                    return jjStopAtPos(1, 39);
                else if ((active0 & 0x10000000000L) != 0L)
                    return jjStopAtPos(1, 40);
                break;
            case 116:
                return jjMoveStringLiteralDfa2_1(active0, 0x200000L);
            default:
                break;
        }
        return jjStartNfa_1(0, active0);
    }

    private int jjMoveStringLiteralDfa2_1(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_1(0, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_1(1, active0);
            return 2;
        }
        switch (curChar) {
            case 111:
                return jjMoveStringLiteralDfa3_1(active0, 0x200000L);
            default:
                break;
        }
        return jjStartNfa_1(1, active0);
    }

    private int jjMoveStringLiteralDfa3_1(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_1(1, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_1(2, active0);
            return 3;
        }
        switch (curChar) {
            case 112:
                if ((active0 & 0x200000L) != 0L)
                    return jjStartNfaWithStates_1(3, 21, 1);
                break;
            default:
                break;
        }
        return jjStartNfa_1(2, active0);
    }

    private int jjStartNfaWithStates_1(int pos, int kind, int state) {
        jjmatchedKind = kind;
        jjmatchedPos = pos;
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            return pos + 1;
        }
        return jjMoveNfa_1(state, pos + 1);
    }

    private int jjMoveNfa_1(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 43;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 43:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(42, 3);
                            else if (curChar == 59) {
                                if (kind > 47)
                                    kind = 47;
                            }
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(41, 2);
                            break;
                        case 0:
                            if ((0x3ff000000000000L & l) != 0L) {
                                if (kind > 36)
                                    kind = 36;
                                jjCheckNAddStates(26, 32);
                            } else if ((0x100000200L & l) != 0L)
                                jjCheckNAddStates(33, 36);
                            else if (curChar == 47)
                                jjAddStates(37, 38);
                            else if (curChar == 46)
                                jjCheckNAddTwoStates(7, 16);
                            else if (curChar == 45)
                                jjCheckNAddStates(39, 44);
                            else if (curChar == 59) {
                                if (kind > 47)
                                    kind = 47;
                            }
                            break;
                        case 6:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(20, 21);
                            else if (curChar == 46)
                                jjCheckNAdd(16);
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(11, 12);
                            else if (curChar == 46)
                                jjCheckNAdd(7);
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(8, 9);
                            if ((0x3ff000000000000L & l) != 0L) {
                                if (kind > 36)
                                    kind = 36;
                                jjCheckNAdd(5);
                            }
                            break;
                        case 1:
                            if ((0x3ff400000000000L & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjstateSet[jjnewStateCnt++] = 1;
                            break;
                        case 2:
                            if (curChar == 59 && kind > 47)
                                kind = 47;
                            break;
                        case 4:
                            if (curChar == 45)
                                jjCheckNAddStates(39, 44);
                            break;
                        case 5:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(5);
                            break;
                        case 7:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(7);
                            break;
                        case 8:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(8, 9);
                            break;
                        case 9:
                            if (curChar != 46)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(10);
                            break;
                        case 10:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(10);
                            break;
                        case 11:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(11, 12);
                            break;
                        case 13:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(14);
                            break;
                        case 14:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(14);
                            break;
                        case 15:
                            if (curChar == 46)
                                jjCheckNAdd(16);
                            break;
                        case 16:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(16, 17);
                            break;
                        case 18:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(19);
                            break;
                        case 19:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(19);
                            break;
                        case 20:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(20, 21);
                            break;
                        case 21:
                            if (curChar == 46)
                                jjCheckNAddTwoStates(22, 23);
                            break;
                        case 22:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(22, 23);
                            break;
                        case 24:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(25);
                            break;
                        case 25:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(25);
                            break;
                        case 26:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAddStates(26, 32);
                            break;
                        case 27:
                            if (curChar == 46)
                                jjCheckNAddTwoStates(7, 16);
                            break;
                        case 28:
                            if (curChar == 47)
                                jjAddStates(37, 38);
                            break;
                        case 29:
                            if (curChar == 47)
                                jjCheckNAddStates(45, 47);
                            break;
                        case 30:
                            if ((0xffffffffffffdbffL & l) != 0L)
                                jjCheckNAddStates(45, 47);
                            break;
                        case 31:
                            if ((0x2400L & l) != 0L && kind > 5)
                                kind = 5;
                            break;
                        case 32:
                            if (curChar == 10 && kind > 5)
                                kind = 5;
                            break;
                        case 33:
                            if (curChar == 13)
                                jjstateSet[jjnewStateCnt++] = 32;
                            break;
                        case 34:
                            if (curChar == 42)
                                jjCheckNAddTwoStates(35, 36);
                            break;
                        case 35:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(35, 36);
                            break;
                        case 36:
                            if (curChar == 42)
                                jjAddStates(48, 49);
                            break;
                        case 37:
                            if ((0xffff7fffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(38, 36);
                            break;
                        case 38:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(38, 36);
                            break;
                        case 39:
                            if (curChar == 47 && kind > 6)
                                kind = 6;
                            break;
                        case 40:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddStates(33, 36);
                            break;
                        case 41:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(41, 2);
                            break;
                        case 42:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(42, 3);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 43:
                        case 3:
                            if (curChar == 93 && kind > 48)
                                kind = 48;
                            break;
                        case 0:
                            if ((0x7fffffe07fffffeL & l) != 0L) {
                                if (kind > 37)
                                    kind = 37;
                                jjCheckNAdd(1);
                            } else if (curChar == 93) {
                                if (kind > 48)
                                    kind = 48;
                            }
                            break;
                        case 1:
                            if ((0x7fffffe87fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 12:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(50, 51);
                            break;
                        case 17:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(52, 53);
                            break;
                        case 23:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(54, 55);
                            break;
                        case 30:
                            jjAddStates(45, 47);
                            break;
                        case 35:
                            jjCheckNAddTwoStates(35, 36);
                            break;
                        case 37:
                        case 38:
                            jjCheckNAddTwoStates(38, 36);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 30:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjAddStates(45, 47);
                            break;
                        case 35:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(35, 36);
                            break;
                        case 37:
                        case 38:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(38, 36);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 43 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjMoveStringLiteralDfa0_8() {
        return jjMoveNfa_8(3, 0);
    }

    private int jjMoveNfa_8(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 6;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 3:
                            if ((0x73ffff6300000200L & l) != 0L) {
                                if (kind > 53)
                                    kind = 53;
                                jjCheckNAdd(2);
                            } else if (curChar == 59) {
                                if (kind > 34)
                                    kind = 34;
                            }
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddStates(56, 59);
                            break;
                        case 0:
                            if (curChar == 59)
                                kind = 34;
                            break;
                        case 2:
                            if ((0x73ffff6300000200L & l) == 0L)
                                break;
                            if (kind > 53)
                                kind = 53;
                            jjCheckNAdd(2);
                            break;
                        case 4:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(4, 0);
                            break;
                        case 5:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(5, 1);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 3:
                            if ((0x17fffffec7fffffeL & l) != 0L) {
                                if (kind > 53)
                                    kind = 53;
                                jjCheckNAdd(2);
                            } else if (curChar == 93) {
                                if (kind > 35)
                                    kind = 35;
                            }
                            break;
                        case 1:
                            if (curChar == 93)
                                kind = 35;
                            break;
                        case 2:
                            if ((0x17fffffec7fffffeL & l) == 0L)
                                break;
                            kind = 53;
                            jjCheckNAdd(2);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private final int jjStopStringLiteralDfa_6(int pos, long active0) {
        switch (pos) {
            default:
                return -1;
        }
    }

    private final int jjStartNfa_6(int pos, long active0) {
        return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0), pos + 1);
    }

    private int jjMoveStringLiteralDfa0_6() {
        switch (curChar) {
            case 59:
                return jjStopAtPos(0, 22);
            default:
                return jjMoveNfa_6(0, 0);
        }
    }

    private int jjMoveNfa_6(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 1;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x73ffff6300000200L & l) == 0L)
                                break;
                            kind = 53;
                            jjstateSet[jjnewStateCnt++] = 0;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x17fffffec7fffffeL & l) == 0L)
                                break;
                            kind = 53;
                            jjstateSet[jjnewStateCnt++] = 0;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private final int jjStopStringLiteralDfa_0(int pos, long active0) {
        switch (pos) {
            case 0:
                if ((active0 & 0x1fe000L) != 0L) {
                    jjmatchedKind = 37;
                    return 1;
                }
                return -1;
            case 1:
                if ((active0 & 0x1fe000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 1;
                    return 1;
                }
                return -1;
            case 2:
                if ((active0 & 0xfe000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 2;
                    return 1;
                }
                if ((active0 & 0x100000L) != 0L)
                    return 1;
                return -1;
            case 3:
                if ((active0 & 0x8000L) != 0L)
                    return 1;
                if ((active0 & 0xf6000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 3;
                    return 1;
                }
                return -1;
            case 4:
                if ((active0 & 0x16000L) != 0L)
                    return 1;
                if ((active0 & 0xe0000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 4;
                    return 1;
                }
                return -1;
            case 5:
                if ((active0 & 0xe0000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 5;
                    return 1;
                }
                return -1;
            case 6:
                if ((active0 & 0xe0000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 6;
                    return 1;
                }
                return -1;
            case 7:
                if ((active0 & 0xa0000L) != 0L)
                    return 1;
                if ((active0 & 0x40000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 7;
                    return 1;
                }
                return -1;
            case 8:
                if ((active0 & 0x40000L) != 0L) {
                    jjmatchedKind = 37;
                    jjmatchedPos = 8;
                    return 1;
                }
                return -1;
            default:
                return -1;
        }
    }

    private final int jjStartNfa_0(int pos, long active0) {
        return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
    }

    private int jjMoveStringLiteralDfa0_0() {
        switch (curChar) {
            case 42:
                return jjStopAtPos(0, 27);
            case 58:
                return jjStopAtPos(0, 23);
            case 59:
                return jjStopAtPos(0, 22);
            case 61:
                return jjStopAtPos(0, 24);
            case 64:
                jjmatchedKind = 30;
                return jjMoveStringLiteralDfa1_0(0x30000000L);
            case 91:
                return jjStopAtPos(0, 26);
            case 99:
                return jjMoveStringLiteralDfa1_0(0x8000L);
            case 100:
                return jjMoveStringLiteralDfa1_0(0x4000L);
            case 101:
                return jjMoveStringLiteralDfa1_0(0x40000L);
            case 102:
                return jjMoveStringLiteralDfa1_0(0x20000L);
            case 108:
                return jjMoveStringLiteralDfa1_0(0x100000L);
            case 109:
                return jjMoveStringLiteralDfa1_0(0x2000L);
            case 112:
                return jjMoveStringLiteralDfa1_0(0x10000L);
            case 116:
                return jjMoveStringLiteralDfa1_0(0x80000L);
            case 123:
                return jjStopAtPos(0, 25);
            case 125:
                return jjStopAtPos(0, 32);
            default:
                return jjMoveNfa_0(0, 0);
        }
    }

    private int jjMoveStringLiteralDfa1_0(long active0) {
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(0, active0);
            return 1;
        }
        switch (curChar) {
            case 97:
                return jjMoveStringLiteralDfa2_0(active0, 0x10000L);
            case 101:
                return jjMoveStringLiteralDfa2_0(active0, 0x184000L);
            case 105:
                return jjMoveStringLiteralDfa2_0(active0, 0x20000000L);
            case 111:
                return jjMoveStringLiteralDfa2_0(active0, 0xa000L);
            case 116:
                return jjMoveStringLiteralDfa2_0(active0, 0x10000000L);
            case 117:
                return jjMoveStringLiteralDfa2_0(active0, 0x20000L);
            case 120:
                return jjMoveStringLiteralDfa2_0(active0, 0x40000L);
            default:
                break;
        }
        return jjStartNfa_0(0, active0);
    }

    private int jjMoveStringLiteralDfa2_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(0, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(1, active0);
            return 2;
        }
        switch (curChar) {
            case 100:
                return jjMoveStringLiteralDfa3_0(active0, 0x2000L);
            case 105:
                return jjMoveStringLiteralDfa3_0(active0, 0x10000000L);
            case 108:
                return jjMoveStringLiteralDfa3_0(active0, 0x4000L);
            case 109:
                return jjMoveStringLiteralDfa3_0(active0, 0x80000L);
            case 110:
                return jjMoveStringLiteralDfa3_0(active0, 0x20028000L);
            case 112:
                return jjMoveStringLiteralDfa3_0(active0, 0x40000L);
            case 114:
                return jjMoveStringLiteralDfa3_0(active0, 0x10000L);
            case 116:
                if ((active0 & 0x100000L) != 0L)
                    return jjStartNfaWithStates_0(2, 20, 1);
                break;
            default:
                break;
        }
        return jjStartNfa_0(1, active0);
    }

    private int jjMoveStringLiteralDfa3_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(1, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(2, active0);
            return 3;
        }
        switch (curChar) {
            case 97:
                return jjMoveStringLiteralDfa4_0(active0, 0x14000L);
            case 99:
                return jjMoveStringLiteralDfa4_0(active0, 0x20000L);
            case 101:
                return jjMoveStringLiteralDfa4_0(active0, 0x2000L);
            case 102:
                if ((active0 & 0x20000000L) != 0L)
                    return jjStopAtPos(3, 29);
                break;
            case 109:
                return jjMoveStringLiteralDfa4_0(active0, 0x10000000L);
            case 112:
                return jjMoveStringLiteralDfa4_0(active0, 0x80000L);
            case 114:
                return jjMoveStringLiteralDfa4_0(active0, 0x40000L);
            case 116:
                if ((active0 & 0x8000L) != 0L)
                    return jjStartNfaWithStates_0(3, 15, 1);
                break;
            default:
                break;
        }
        return jjStartNfa_0(2, active0);
    }

    private int jjMoveStringLiteralDfa4_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(2, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(3, active0);
            return 4;
        }
        switch (curChar) {
            case 101:
                if ((active0 & 0x10000000L) != 0L)
                    return jjStopAtPos(4, 28);
                return jjMoveStringLiteralDfa5_0(active0, 0x40000L);
            case 108:
                if ((active0 & 0x2000L) != 0L)
                    return jjStartNfaWithStates_0(4, 13, 1);
                return jjMoveStringLiteralDfa5_0(active0, 0x80000L);
            case 109:
                if ((active0 & 0x10000L) != 0L)
                    return jjStartNfaWithStates_0(4, 16, 1);
                break;
            case 116:
                return jjMoveStringLiteralDfa5_0(active0, 0x20000L);
            case 121:
                if ((active0 & 0x4000L) != 0L)
                    return jjStartNfaWithStates_0(4, 14, 1);
                break;
            default:
                break;
        }
        return jjStartNfa_0(3, active0);
    }

    private int jjMoveStringLiteralDfa5_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(3, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(4, active0);
            return 5;
        }
        switch (curChar) {
            case 97:
                return jjMoveStringLiteralDfa6_0(active0, 0x80000L);
            case 105:
                return jjMoveStringLiteralDfa6_0(active0, 0x20000L);
            case 115:
                return jjMoveStringLiteralDfa6_0(active0, 0x40000L);
            default:
                break;
        }
        return jjStartNfa_0(4, active0);
    }

    private int jjMoveStringLiteralDfa6_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(4, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(5, active0);
            return 6;
        }
        switch (curChar) {
            case 111:
                return jjMoveStringLiteralDfa7_0(active0, 0x20000L);
            case 115:
                return jjMoveStringLiteralDfa7_0(active0, 0x40000L);
            case 116:
                return jjMoveStringLiteralDfa7_0(active0, 0x80000L);
            default:
                break;
        }
        return jjStartNfa_0(5, active0);
    }

    private int jjMoveStringLiteralDfa7_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(5, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(6, active0);
            return 7;
        }
        switch (curChar) {
            case 101:
                if ((active0 & 0x80000L) != 0L)
                    return jjStartNfaWithStates_0(7, 19, 1);
                break;
            case 105:
                return jjMoveStringLiteralDfa8_0(active0, 0x40000L);
            case 110:
                if ((active0 & 0x20000L) != 0L)
                    return jjStartNfaWithStates_0(7, 17, 1);
                break;
            default:
                break;
        }
        return jjStartNfa_0(6, active0);
    }

    private int jjMoveStringLiteralDfa8_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(6, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(7, active0);
            return 8;
        }
        switch (curChar) {
            case 111:
                return jjMoveStringLiteralDfa9_0(active0, 0x40000L);
            default:
                break;
        }
        return jjStartNfa_0(7, active0);
    }

    private int jjMoveStringLiteralDfa9_0(long old0, long active0) {
        if (((active0 &= old0)) == 0L)
            return jjStartNfa_0(7, old0);
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(8, active0);
            return 9;
        }
        switch (curChar) {
            case 110:
                if ((active0 & 0x40000L) != 0L)
                    return jjStartNfaWithStates_0(9, 18, 1);
                break;
            default:
                break;
        }
        return jjStartNfa_0(8, active0);
    }

    private int jjStartNfaWithStates_0(int pos, int kind, int state) {
        jjmatchedKind = kind;
        jjmatchedPos = pos;
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            return pos + 1;
        }
        return jjMoveNfa_0(state, pos + 1);
    }

    private int jjMoveNfa_0(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 38;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x3ff000000000000L & l) != 0L) {
                                if (kind > 36)
                                    kind = 36;
                                jjCheckNAddStates(0, 6);
                            } else if (curChar == 47)
                                jjAddStates(7, 8);
                            else if (curChar == 46)
                                jjCheckNAddTwoStates(5, 14);
                            else if (curChar == 45)
                                jjCheckNAddStates(9, 14);
                            break;
                        case 1:
                            if ((0x3ff400000000000L & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjstateSet[jjnewStateCnt++] = 1;
                            break;
                        case 2:
                            if (curChar == 45)
                                jjCheckNAddStates(9, 14);
                            break;
                        case 3:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(3);
                            break;
                        case 4:
                            if (curChar == 46)
                                jjCheckNAdd(5);
                            break;
                        case 5:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(5);
                            break;
                        case 6:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(6, 7);
                            break;
                        case 7:
                            if (curChar != 46)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(8);
                            break;
                        case 8:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(8);
                            break;
                        case 9:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(12);
                            break;
                        case 12:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(12);
                            break;
                        case 13:
                            if (curChar == 46)
                                jjCheckNAdd(14);
                            break;
                        case 14:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(14, 15);
                            break;
                        case 16:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(17);
                            break;
                        case 17:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(17);
                            break;
                        case 18:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(18, 19);
                            break;
                        case 19:
                            if (curChar == 46)
                                jjCheckNAddTwoStates(20, 21);
                            break;
                        case 20:
                            if ((0x3ff000000000000L & l) != 0L)
                                jjCheckNAddTwoStates(20, 21);
                            break;
                        case 22:
                            if ((0x280000000000L & l) != 0L)
                                jjCheckNAdd(23);
                            break;
                        case 23:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAdd(23);
                            break;
                        case 24:
                            if ((0x3ff000000000000L & l) == 0L)
                                break;
                            if (kind > 36)
                                kind = 36;
                            jjCheckNAddStates(0, 6);
                            break;
                        case 25:
                            if (curChar == 46)
                                jjCheckNAddTwoStates(5, 14);
                            break;
                        case 26:
                            if (curChar == 47)
                                jjAddStates(7, 8);
                            break;
                        case 27:
                            if (curChar == 47)
                                jjCheckNAddStates(15, 17);
                            break;
                        case 28:
                            if ((0xffffffffffffdbffL & l) != 0L)
                                jjCheckNAddStates(15, 17);
                            break;
                        case 29:
                            if ((0x2400L & l) != 0L && kind > 5)
                                kind = 5;
                            break;
                        case 30:
                            if (curChar == 10 && kind > 5)
                                kind = 5;
                            break;
                        case 31:
                            if (curChar == 13)
                                jjstateSet[jjnewStateCnt++] = 30;
                            break;
                        case 32:
                            if (curChar == 42)
                                jjCheckNAddTwoStates(33, 34);
                            break;
                        case 33:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(33, 34);
                            break;
                        case 34:
                            if (curChar == 42)
                                jjAddStates(18, 19);
                            break;
                        case 35:
                            if ((0xffff7fffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(36, 34);
                            break;
                        case 36:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(36, 34);
                            break;
                        case 37:
                            if (curChar == 47 && kind > 6)
                                kind = 6;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x7fffffe07fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 1:
                            if ((0x7fffffe87fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 10:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(20, 21);
                            break;
                        case 15:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(22, 23);
                            break;
                        case 21:
                            if ((0x2000000020L & l) != 0L)
                                jjAddStates(24, 25);
                            break;
                        case 28:
                            jjAddStates(15, 17);
                            break;
                        case 33:
                            jjCheckNAddTwoStates(33, 34);
                            break;
                        case 35:
                        case 36:
                            jjCheckNAddTwoStates(36, 34);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 28:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjAddStates(15, 17);
                            break;
                        case 33:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(33, 34);
                            break;
                        case 35:
                        case 36:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(36, 34);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 38 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private final int jjStopStringLiteralDfa_7(int pos, long active0) {
        switch (pos) {
            default:
                return -1;
        }
    }

    private final int jjStartNfa_7(int pos, long active0) {
        return jjMoveNfa_7(jjStopStringLiteralDfa_7(pos, active0), pos + 1);
    }

    private int jjMoveStringLiteralDfa0_7() {
        switch (curChar) {
            case 59:
                return jjStopAtPos(0, 22);
            default:
                return jjMoveNfa_7(0, 0);
        }
    }

    private int jjMoveNfa_7(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 1;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x73ffff6300000200L & l) == 0L)
                                break;
                            kind = 53;
                            jjstateSet[jjnewStateCnt++] = 0;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x17fffffec7fffffeL & l) == 0L)
                                break;
                            kind = 53;
                            jjstateSet[jjnewStateCnt++] = 0;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjMoveStringLiteralDfa0_9() {
        return jjMoveNfa_9(9, 0);
    }

    private int jjMoveNfa_9(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 16;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 9:
                            if ((0x73ffff6300000200L & l) != 0L) {
                                if (kind > 53)
                                    kind = 53;
                                jjCheckNAdd(8);
                            } else if (curChar == 35) {
                                if (kind > 52)
                                    kind = 52;
                            } else if (curChar == 58) {
                                if (kind > 51)
                                    kind = 51;
                            } else if (curChar == 59) {
                                if (kind > 47)
                                    kind = 47;
                            }
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddStates(60, 71);
                            else if (curChar == 58)
                                jjstateSet[jjnewStateCnt++] = 4;
                            break;
                        case 0:
                            if (curChar == 59)
                                kind = 47;
                            break;
                        case 3:
                            if (curChar == 62 && kind > 50)
                                kind = 50;
                            break;
                        case 4:
                            if (curChar == 45)
                                jjstateSet[jjnewStateCnt++] = 3;
                            break;
                        case 5:
                            if (curChar == 58)
                                jjstateSet[jjnewStateCnt++] = 4;
                            break;
                        case 6:
                            if (curChar == 58 && kind > 51)
                                kind = 51;
                            break;
                        case 7:
                            if (curChar == 35)
                                kind = 52;
                            break;
                        case 8:
                            if ((0x73ffff6300000200L & l) == 0L)
                                break;
                            if (kind > 53)
                                kind = 53;
                            jjCheckNAdd(8);
                            break;
                        case 10:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(10, 0);
                            break;
                        case 11:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(11, 1);
                            break;
                        case 12:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(12, 2);
                            break;
                        case 13:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(13, 5);
                            break;
                        case 14:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(14, 6);
                            break;
                        case 15:
                            if ((0x100000200L & l) != 0L)
                                jjCheckNAddTwoStates(15, 7);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 9:
                            if ((0x17fffffec7fffffeL & l) != 0L) {
                                if (kind > 53)
                                    kind = 53;
                                jjCheckNAdd(8);
                            } else if (curChar == 125) {
                                if (kind > 49)
                                    kind = 49;
                            } else if (curChar == 93) {
                                if (kind > 48)
                                    kind = 48;
                            }
                            break;
                        case 1:
                            if (curChar == 93)
                                kind = 48;
                            break;
                        case 2:
                            if (curChar == 125)
                                kind = 49;
                            break;
                        case 8:
                            if ((0x17fffffec7fffffeL & l) == 0L)
                                break;
                            kind = 53;
                            jjCheckNAdd(8);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 16 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private final int jjStopStringLiteralDfa_4(int pos, long active0) {
        switch (pos) {
            default:
                return -1;
        }
    }

    private final int jjStartNfa_4(int pos, long active0) {
        return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0), pos + 1);
    }

    private int jjMoveStringLiteralDfa0_4() {
        switch (curChar) {
            case 59:
                return jjStopAtPos(0, 46);
            case 91:
                return jjStopAtPos(0, 44);
            case 93:
                return jjStopAtPos(0, 45);
            case 123:
                return jjStopAtPos(0, 31);
            default:
                return jjMoveNfa_4(0, 0);
        }
    }

    private int jjMoveNfa_4(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 14;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if (curChar == 47)
                                jjAddStates(72, 73);
                            break;
                        case 1:
                            if ((0x3ff400000000000L & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjstateSet[jjnewStateCnt++] = 1;
                            break;
                        case 3:
                            if (curChar == 47)
                                jjCheckNAddStates(74, 76);
                            break;
                        case 4:
                            if ((0xffffffffffffdbffL & l) != 0L)
                                jjCheckNAddStates(74, 76);
                            break;
                        case 5:
                            if ((0x2400L & l) != 0L && kind > 5)
                                kind = 5;
                            break;
                        case 6:
                            if (curChar == 10 && kind > 5)
                                kind = 5;
                            break;
                        case 7:
                            if (curChar == 13)
                                jjstateSet[jjnewStateCnt++] = 6;
                            break;
                        case 8:
                            if (curChar == 42)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 9:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 10:
                            if (curChar == 42)
                                jjAddStates(77, 78);
                            break;
                        case 11:
                            if ((0xffff7fffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        case 12:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        case 13:
                            if (curChar == 47 && kind > 6)
                                kind = 6;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x7fffffe07fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 1:
                            if ((0x7fffffe87fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 4:
                            jjAddStates(74, 76);
                            break;
                        case 9:
                            jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                        case 12:
                            jjCheckNAddTwoStates(12, 10);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 4:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjAddStates(74, 76);
                            break;
                        case 9:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                        case 12:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private final int jjStopStringLiteralDfa_3(int pos, long active0) {
        switch (pos) {
            default:
                return -1;
        }
    }

    private final int jjStartNfa_3(int pos, long active0) {
        return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0), pos + 1);
    }

    private int jjMoveStringLiteralDfa0_3() {
        switch (curChar) {
            case 123:
                return jjStopAtPos(0, 31);
            default:
                return jjMoveNfa_3(0, 0);
        }
    }

    private int jjMoveNfa_3(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 14;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if (curChar == 47)
                                jjAddStates(72, 73);
                            break;
                        case 1:
                            if ((0x3ff400000000000L & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjstateSet[jjnewStateCnt++] = 1;
                            break;
                        case 3:
                            if (curChar == 47)
                                jjCheckNAddStates(74, 76);
                            break;
                        case 4:
                            if ((0xffffffffffffdbffL & l) != 0L)
                                jjCheckNAddStates(74, 76);
                            break;
                        case 5:
                            if ((0x2400L & l) != 0L && kind > 5)
                                kind = 5;
                            break;
                        case 6:
                            if (curChar == 10 && kind > 5)
                                kind = 5;
                            break;
                        case 7:
                            if (curChar == 13)
                                jjstateSet[jjnewStateCnt++] = 6;
                            break;
                        case 8:
                            if (curChar == 42)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 9:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 10:
                            if (curChar == 42)
                                jjAddStates(77, 78);
                            break;
                        case 11:
                            if ((0xffff7fffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        case 12:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        case 13:
                            if (curChar == 47 && kind > 6)
                                kind = 6;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x7fffffe07fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 1:
                            if ((0x7fffffe87fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 4:
                            jjAddStates(74, 76);
                            break;
                        case 9:
                            jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                        case 12:
                            jjCheckNAddTwoStates(12, 10);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 4:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjAddStates(74, 76);
                            break;
                        case 9:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                        case 12:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    private final int jjStopStringLiteralDfa_5(int pos, long active0) {
        switch (pos) {
            default:
                return -1;
        }
    }

    private final int jjStartNfa_5(int pos, long active0) {
        return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0), pos + 1);
    }

    private int jjMoveStringLiteralDfa0_5() {
        switch (curChar) {
            case 58:
                return jjStopAtPos(0, 23);
            case 91:
                return jjStopAtPos(0, 33);
            default:
                return jjMoveNfa_5(0, 0);
        }
    }

    private int jjMoveNfa_5(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 14;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (; ; ) {
            if (++jjround == 0x7fffffff)
                ReInitRounds();
            if (curChar < 64) {
                long l = 1L << curChar;
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if (curChar == 47)
                                jjAddStates(72, 73);
                            break;
                        case 1:
                            if ((0x3ff400000000000L & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjstateSet[jjnewStateCnt++] = 1;
                            break;
                        case 3:
                            if (curChar == 47)
                                jjCheckNAddStates(74, 76);
                            break;
                        case 4:
                            if ((0xffffffffffffdbffL & l) != 0L)
                                jjCheckNAddStates(74, 76);
                            break;
                        case 5:
                            if ((0x2400L & l) != 0L && kind > 5)
                                kind = 5;
                            break;
                        case 6:
                            if (curChar == 10 && kind > 5)
                                kind = 5;
                            break;
                        case 7:
                            if (curChar == 13)
                                jjstateSet[jjnewStateCnt++] = 6;
                            break;
                        case 8:
                            if (curChar == 42)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 9:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 10:
                            if (curChar == 42)
                                jjAddStates(77, 78);
                            break;
                        case 11:
                            if ((0xffff7fffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        case 12:
                            if ((0xfffffbffffffffffL & l) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        case 13:
                            if (curChar == 47 && kind > 6)
                                kind = 6;
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x7fffffe07fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 1:
                            if ((0x7fffffe87fffffeL & l) == 0L)
                                break;
                            if (kind > 37)
                                kind = 37;
                            jjCheckNAdd(1);
                            break;
                        case 4:
                            jjAddStates(74, 76);
                            break;
                        case 9:
                            jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                        case 12:
                            jjCheckNAddTwoStates(12, 10);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                do {
                    switch (jjstateSet[--i]) {
                        case 4:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjAddStates(74, 76);
                            break;
                        case 9:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(9, 10);
                            break;
                        case 11:
                        case 12:
                            if ((jjbitVec0[i2] & l2) != 0L)
                                jjCheckNAddTwoStates(12, 10);
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
                return curPos;
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    static final int[] jjnextStates = {
            3, 6, 7, 9, 10, 18, 19, 27, 32, 3, 4, 6, 9, 13, 18, 28,
            29, 31, 35, 37, 11, 12, 16, 17, 22, 23, 5, 8, 9, 11, 12, 20,
            21, 41, 2, 42, 3, 29, 34, 5, 6, 8, 11, 15, 20, 30, 31, 33,
            37, 39, 13, 14, 18, 19, 24, 25, 4, 0, 5, 1, 10, 0, 11, 1,
            12, 2, 13, 5, 14, 6, 15, 7, 3, 8, 4, 5, 7, 11, 13,
    };

    /**
     * Token literal values.
     */
    public static final String[] jjstrLiteralImages = {
            "", null, null, null, null, null, null, null, null, null, null, null, null,
            "\155\157\144\145\154", "\144\145\154\141\171", "\143\157\156\164", "\160\141\162\141\155",
            "\146\165\156\143\164\151\157\156", "\145\170\160\162\145\163\163\151\157\156",
            "\164\145\155\160\154\141\164\145", "\154\145\164", "\163\164\157\160", "\73", "\72", "\75", "\173", "\133",
            "\52", "\100\164\151\155\145", "\100\151\156\146", "\100", "\173", "\175", "\133",
            null, null, null, null, "\75", "\53\75", "\55\75", "\50", "\51", "\54", "\133",
            "\135", "\73", null, null, null, null, null, null, null, null, null,};

    /**
     * Lexer state names.
     */
    public static final String[] lexStateNames = {
            "DEFAULT",
            "RESET",
            "BUILTIN",
            "BEGINMODEL",
            "TEMPLATEDEF",
            "TEMPLATE",
            "MATH_FDEF",
            "MATH_SYMBOL",
            "MATH_TEMPLATE",
            "MATH",
    };

    /**
     * Lex State array.
     */
    public static final int[] jjnewLexState = {
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, 6, 6, 4, 5, -1, 0, -1, 7,
            9, 9, -1, -1, -1, -1, 0, -1, 8, -1, 0, -1, -1, 9, -1, -1, -1, 9, -1, -1, -1, -1, 1, 0, 0,
            1, -1, 2, -1, -1, -1,
    };
    static final long[] jjtoToken = {
            0x3fffffffffe001L,
    };
    static final long[] jjtoSkip = {
            0x7eL,
    };
    protected SimpleCharStream input_stream;
    private final int[] jjrounds = new int[43];
    private final int[] jjstateSet = new int[86];
    protected char curChar;

    /**
     * Constructor.
     */
    public FlatParserTokenManager(SimpleCharStream stream) {
        if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
        input_stream = stream;
    }

    /**
     * Constructor.
     */
    public FlatParserTokenManager(SimpleCharStream stream, int lexState) {
        this(stream);
        SwitchTo(lexState);
    }

    /**
     * Reinitialise parser.
     */
    public void ReInit(SimpleCharStream stream) {
        jjmatchedPos = jjnewStateCnt = 0;
        curLexState = defaultLexState;
        input_stream = stream;
        ReInitRounds();
    }

    private void ReInitRounds() {
        int i;
        jjround = 0x80000001;
        for (i = 43; i-- > 0; )
            jjrounds[i] = 0x80000000;
    }

    /**
     * Reinitialise parser.
     */
    public void ReInit(SimpleCharStream stream, int lexState) {
        ReInit(stream);
        SwitchTo(lexState);
    }

    /**
     * Switch to specified lex state.
     */
    public void SwitchTo(int lexState) {
        if (lexState >= 10 || lexState < 0)
            throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
        else
            curLexState = lexState;
    }

    protected Token jjFillToken() {
        final Token t;
        final String curTokenImage;
        final int beginLine;
        final int endLine;
        final int beginColumn;
        final int endColumn;
        String im = jjstrLiteralImages[jjmatchedKind];
        curTokenImage = (im == null) ? input_stream.GetImage() : im;
        beginLine = input_stream.getBeginLine();
        beginColumn = input_stream.getBeginColumn();
        endLine = input_stream.getEndLine();
        endColumn = input_stream.getEndColumn();
        t = Token.newToken(jjmatchedKind, curTokenImage);

        t.beginLine = beginLine;
        t.endLine = endLine;
        t.beginColumn = beginColumn;
        t.endColumn = endColumn;

        return t;
    }

    int curLexState = 0;
    int defaultLexState = 0;
    int jjnewStateCnt;
    int jjround;
    int jjmatchedPos;
    int jjmatchedKind;

    /**
     * Get the next Token.
     */
    public Token getNextToken() {
        Token matchedToken;
        int curPos = 0;

        EOFLoop:
        for (; ; ) {
            try {
                curChar = input_stream.BeginToken();
            } catch (java.io.IOException e) {
                jjmatchedKind = 0;
                matchedToken = jjFillToken();
                return matchedToken;
            }

            switch (curLexState) {
                case 0:
                    try {
                        input_stream.backup(0);
                        while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
                            curChar = input_stream.BeginToken();
                    } catch (java.io.IOException e1) {
                        continue EOFLoop;
                    }
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_0();
                    break;
                case 1:
                    try {
                        input_stream.backup(0);
                        while (curChar <= 13 && (0x2400L & (1L << curChar)) != 0L)
                            curChar = input_stream.BeginToken();
                    } catch (java.io.IOException e1) {
                        continue EOFLoop;
                    }
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_1();
                    break;
                case 2:
                    try {
                        input_stream.backup(0);
                        while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
                            curChar = input_stream.BeginToken();
                    } catch (java.io.IOException e1) {
                        continue EOFLoop;
                    }
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_2();
                    break;
                case 3:
                    try {
                        input_stream.backup(0);
                        while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
                            curChar = input_stream.BeginToken();
                    } catch (java.io.IOException e1) {
                        continue EOFLoop;
                    }
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_3();
                    break;
                case 4:
                    try {
                        input_stream.backup(0);
                        while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
                            curChar = input_stream.BeginToken();
                    } catch (java.io.IOException e1) {
                        continue EOFLoop;
                    }
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_4();
                    break;
                case 5:
                    try {
                        input_stream.backup(0);
                        while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
                            curChar = input_stream.BeginToken();
                    } catch (java.io.IOException e1) {
                        continue EOFLoop;
                    }
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_5();
                    break;
                case 6:
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_6();
                    break;
                case 7:
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_7();
                    break;
                case 8:
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_8();
                    break;
                case 9:
                    jjmatchedKind = 0x7fffffff;
                    jjmatchedPos = 0;
                    curPos = jjMoveStringLiteralDfa0_9();
                    break;
            }
            if (jjmatchedKind != 0x7fffffff) {
                if (jjmatchedPos + 1 < curPos)
                    input_stream.backup(curPos - jjmatchedPos - 1);
                if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {
                    matchedToken = jjFillToken();
                    if (jjnewLexState[jjmatchedKind] != -1)
                        curLexState = jjnewLexState[jjmatchedKind];
                    return matchedToken;
                } else {
                    if (jjnewLexState[jjmatchedKind] != -1)
                        curLexState = jjnewLexState[jjmatchedKind];
                    continue EOFLoop;
                }
            }
            int error_line = input_stream.getEndLine();
            int error_column = input_stream.getEndColumn();
            String error_after = null;
            boolean EOFSeen = false;
            try {
                input_stream.readChar();
                input_stream.backup(1);
            } catch (java.io.IOException e1) {
                EOFSeen = true;
                error_after = curPos <= 1 ? "" : input_stream.GetImage();
                if (curChar == '\n' || curChar == '\r') {
                    error_line++;
                    error_column = 0;
                } else
                    error_column++;
            }
            if (!EOFSeen) {
                input_stream.backup(1);
                error_after = curPos <= 1 ? "" : input_stream.GetImage();
            }
            throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
        }
    }

    private void jjCheckNAdd(int state) {
        if (jjrounds[state] != jjround) {
            jjstateSet[jjnewStateCnt++] = state;
            jjrounds[state] = jjround;
        }
    }

    private void jjAddStates(int start, int end) {
        do {
            jjstateSet[jjnewStateCnt++] = jjnextStates[start];
        } while (start++ != end);
    }

    private void jjCheckNAddTwoStates(int state1, int state2) {
        jjCheckNAdd(state1);
        jjCheckNAdd(state2);
    }

    private void jjCheckNAddStates(int start, int end) {
        do {
            jjCheckNAdd(jjnextStates[start]);
        } while (start++ != end);
    }

}
