/* Generated By:JavaCC: Do not edit this line. FlatParserConstants.java */
package com.eggloop.flow.simhya.simhya.model.flat.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FlatParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER = 7;
  /** RegularExpression Id. */
  int FLOAT = 8;
  /** RegularExpression Id. */
  int FLOAT_SCIENTIFIC = 9;
  /** RegularExpression Id. */
  int EXPONENT = 10;
  /** RegularExpression Id. */
  int LETTER = 11;
  /** RegularExpression Id. */
  int DIGIT = 12;
  /** RegularExpression Id. */
  int KEYWORD_MODEL = 13;
  /** RegularExpression Id. */
  int KEYWORD_DELAY = 14;
  /** RegularExpression Id. */
  int KEYWORD_CONT = 15;
  /** RegularExpression Id. */
  int KEYWORD_PARAM = 16;
  /** RegularExpression Id. */
  int KEYWORD_FUNCTION = 17;
  /** RegularExpression Id. */
  int KEYWORD_EXPRESSION = 18;
  /** RegularExpression Id. */
  int KEYWORD_TEMPLATE = 19;
  /** RegularExpression Id. */
  int KEYWORD_LET = 20;
  /** RegularExpression Id. */
  int KEYWORD_STOP = 21;
  /** RegularExpression Id. */
  int EOL = 22;
  /** RegularExpression Id. */
  int SEMICOLON = 23;
  /** RegularExpression Id. */
  int ASSIGN = 24;
  /** RegularExpression Id. */
  int LBR = 25;
  /** RegularExpression Id. */
  int LSQ = 26;
  /** RegularExpression Id. */
  int ASTERISK = 27;
  /** RegularExpression Id. */
  int AT_TIME = 28;
  /** RegularExpression Id. */
  int AT_INF = 29;
  /** RegularExpression Id. */
  int AT = 30;
  /** RegularExpression Id. */
  int BEGIN = 31;
  /** RegularExpression Id. */
  int END = 32;
  /** RegularExpression Id. */
  int LSQ_TEMPLATE = 33;
  /** RegularExpression Id. */
  int SEP_TEMPLATE = 34;
  /** RegularExpression Id. */
  int RSQ_TEMPLATE = 35;
  /** RegularExpression Id. */
  int NUMBER = 36;
  /** RegularExpression Id. */
  int IDENTIFIER = 37;
  /** RegularExpression Id. */
  int RES_ASSIGN = 38;
  /** RegularExpression Id. */
  int INCREMENT = 39;
  /** RegularExpression Id. */
  int DECREMENT = 40;
  /** RegularExpression Id. */
  int LR = 41;
  /** RegularExpression Id. */
  int RR = 42;
  /** RegularExpression Id. */
  int COMMA = 43;
  /** RegularExpression Id. */
  int ARG_BEGIN = 44;
  /** RegularExpression Id. */
  int ARG_END = 45;
  /** RegularExpression Id. */
  int SEP = 46;
  /** RegularExpression Id. */
  int ARG_SEP = 47;
  /** RegularExpression Id. */
  int RSQ = 48;
  /** RegularExpression Id. */
  int RBR = 49;
  /** RegularExpression Id. */
  int IMPLY = 50;
  /** RegularExpression Id. */
  int SEMICOLON_MATH = 51;
  /** RegularExpression Id. */
  int DIESIS = 52;
  /** RegularExpression Id. */
  int MATH_EXPR = 53;
  /** RegularExpression Id. */
  int SPACE = 54;
  /** RegularExpression Id. */
  int SYMBOL = 55;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int RESET = 1;
  /** Lexical state. */
  int BUILTIN = 2;
  /** Lexical state. */
  int BEGINMODEL = 3;
  /** Lexical state. */
  int TEMPLATEDEF = 4;
  /** Lexical state. */
  int TEMPLATE = 5;
  /** Lexical state. */
  int MATH_FDEF = 6;
  /** Lexical state. */
  int MATH_SYMBOL = 7;
  /** Lexical state. */
  int MATH_TEMPLATE = 8;
  /** Lexical state. */
  int MATH = 9;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER>",
    "<FLOAT>",
    "<FLOAT_SCIENTIFIC>",
    "<EXPONENT>",
    "<LETTER>",
    "<DIGIT>",
    "\"model\"",
    "\"delay\"",
    "\"cont\"",
    "\"param\"",
    "\"function\"",
    "\"expression\"",
    "\"template\"",
    "\"let\"",
    "\"stop\"",
    "\";\"",
    "\":\"",
    "\"=\"",
    "\"{\"",
    "\"[\"",
    "\"*\"",
    "\"@time\"",
    "\"@inf\"",
    "\"@\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "<SEP_TEMPLATE>",
    "<RSQ_TEMPLATE>",
    "<NUMBER>",
    "<IDENTIFIER>",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "<ARG_SEP>",
    "<RSQ>",
    "<RBR>",
    "<IMPLY>",
    "<SEMICOLON_MATH>",
    "<DIESIS>",
    "<MATH_EXPR>",
    "<SPACE>",
    "<SYMBOL>",
  };

}
